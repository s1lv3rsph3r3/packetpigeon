---
- hosts: all
  become: true
  tasks:
    - name: Install acl
      shell: apt install acl

    - name: Make sure the remote app root exists and has the right permissions
      file:
        path: "{{ remote_www_root }}/{{ app_root_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"

    - name: Make sure the remote app vendor directory exists and has the right permissions
      file:
        path: "{{ remote_www_root }}/{{ app_root_dir }}/vendor"
        state: directory
        mode: '0755'
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"


    # TODO: This should use vars
    - name: Rsync application files to the remote server
      synchronize:
        src: "/home/runner/work/packetpigeon/packetpigeon"
        dest: "{{ remote_www_root }}"
        rsync_opts:
          - "--no-motd"
          - "--exclude=.git,vendor,tests,storage/logs/*,storage/framework/sessions/*,storage/framework/cache/*"

    - name: Make sure the remote app vendor directory exists and has the right permissions
      file:
        path: "{{ remote_www_root }}/{{ app_root_dir }}/composer.lock"
        state: file
        mode: '0755'
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"

    - name: Set up additional directory permissions for www-data user on storage folder
      acl:
        path: "{{ remote_www_root }}/{{ app_root_dir }}/storage/"
        entry: group:www-data:rwX
        recursive: yes
        state: present

    - name: Set up additional directory permissions for www-data user on bootstrap/cache folder
      acl:
        path: "{{ remote_www_root }}/{{ app_root_dir }}/bootstrap/cache/"
        entry: group:www-data:rwX
        recursive: yes
        state: present

    - name: Set up .env file
      template:
        src: laravel-env.j2
        dest: "{{ remote_www_root }}/{{ app_root_dir }}/.env"

    - name: Install Dependencies with Composer
      become: false
      composer:
        command: install
        working_dir: "{{ remote_www_root }}/{{ app_root_dir }}"
      tags: [ 'composer:install' ]

    - name: Generate app key
      command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan key:generate"
      tags: [ 'laravel', 'artisan:key' ]

    - name: Set up app storage link
      command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan storage:link"
      tags: [ 'laravel', 'artisan:storage' ]

    - name: install nodejs prerequisites
      apt:
        name:
          - apt-transport-https
          - gcc
          - g++
          - make
        state: present
    - name: add nodejs apt key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
    - name: add nodejs repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_14.x {{ ansible_lsb.codename }} main
        state: present
        update_cache: yes
    - name: install nodejs
      apt:
        name: nodejs
        state: present

    - name: NPM install
      command: "npm install"
      args:
        chdir: "{{ remote_www_root }}/{{ app_root_dir }}"
      tags: [ 'npm:install' ]

    - name: NPM run production
      command: "npm run production"
      args:
        chdir: "{{ remote_www_root }}/{{ app_root_dir }}"
      tags: [ 'npm:production' ]

#    - name: Run Migrations + Seeders
#      command: "/usr/bin/php {{ remote_www_root }}/{{ app_root_dir }}/artisan migrate --seed"
#      tags: [ 'laravel', 'artisan:migrate' ]
